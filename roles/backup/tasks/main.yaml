---
- name: Add the user "backup" and genereate its keys
  user:
    name: backup
    create_home: yes
    generate_ssh_key: yes
    ssh_key_bits: 4096
    ssh_key_file: .ssh/id_rsa
    state: present
  notify:
    - Add the user to the Prometheus and Grafana groups on the management VM
    - Add the user to the InfluxDB group on the management VM
    - Add the user to the MySQL group on the master MySQL instance

- name: Add the group "backup"
  group:
    name: backup
    state: present

- name: Create a group "472" for Grafana backups
  group: 
    name: "472"
    gid: 472
    state: present
  when: inventory_hostname == groups['grafana'][0]

# Add MySQL backup user and MySQL cnf file on the master MySQL instance

- name: Create MySQL backup user
  mysql_user:
    name: "{{ mysql_backup_user }}"
    password: "{{ mysql_backup_pass }}"
    priv: "{{ mysql_database }}.*:SELECT,LOCK TABLES"
    host: "localhost"
    login_unix_socket: /var/run/mysqld/mysqld.sock
  no_log: true
  when: inventory_hostname == groups['db_masters'][0]

- name: Copy MySQL configuration file
  template:
    src: backup.my.cnf.j2
    dest: /home/backup/.my.cnf
    owner: backup
    group: backup
    mode: '0400'
  when: inventory_hostname == groups['db_masters'][0]

# Task to create required directories and backup scripts

- name: Create backup, restore and scripts directories
  file:
    path: /home/backup/{{ item }}
    state: directory
    owner: backup
    group: backup
    mode: '0755'
  loop:
    - backup
    - restore
    - scripts

- name: Create InfluxDB backup directory
  file:
    path: /home/backup/backup/influxdb
    state: directory
    owner: backup
    group: backup
    mode: '0755'
  when: inventory_hostname == groups['influxdb'][0]

- name: Copy Grafana, Prometheus and InfluxDB backup scripts to the management VM
  copy:
    src: "{{ item }}"
    dest: /home/backup/scripts/{{ item }}
    owner: backup
    group: backup
    mode: '0500'
  when: inventory_hostname == groups['grafana'][0]
  loop:
    - grafana.sh
    - prometheus.sh
    - influxdb.sh

- name: Copy MySQL backup script to the master MySQL instance
  copy:
    src: mysql.sh
    dest: /home/backup/scripts
    owner: backup
    group: backup
    mode: '0500'
  when: inventory_hostname == groups['db_masters'][0]

# Install Duplicity and copy crontabs

- name: Install Duplicity
  apt:
    name: duplicity
    state: latest

- name: Copy crontab to VMs with the application stack
  template:
    src: crontab.app.j2
    dest: /etc/cron.d/backup
    owner: root
    group: root
    mode: '0644'
  when: inventory_hostname in groups['app_servers']

- name: Copy crontab to the management VM
  template:
    src: crontab.management.j2
    dest: /etc/cron.d/backup
    owner: root
    group: root
    mode: '0644'
  when: inventory_hostname == groups['internal'][0]
